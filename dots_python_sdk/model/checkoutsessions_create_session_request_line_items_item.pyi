# coding: utf-8

"""
    dots api

    Scalable and Flexible Payouts Infrastructure

    The version of the OpenAPI document: 1.0
    Contact: info@dots.dev
    Created by: https://dots.dev
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dots_python_sdk import schemas  # noqa: F401


class CheckoutsessionsCreateSessionRequestLineItemsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "price_data",
            "quantity",
        }
        
        class properties:
        
            @staticmethod
            def price_data() -> typing.Type['CheckoutsessionsCreateSessionRequestLineItemsItemPriceData']:
                return CheckoutsessionsCreateSessionRequestLineItemsItemPriceData
            quantity = schemas.IntSchema
            __annotations__ = {
                "price_data": price_data,
                "quantity": quantity,
            }
    
    price_data: 'CheckoutsessionsCreateSessionRequestLineItemsItemPriceData'
    quantity: MetaOapg.properties.quantity
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["price_data"]) -> 'CheckoutsessionsCreateSessionRequestLineItemsItemPriceData': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["quantity"]) -> MetaOapg.properties.quantity: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["price_data", "quantity", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["price_data"]) -> 'CheckoutsessionsCreateSessionRequestLineItemsItemPriceData': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["quantity"]) -> MetaOapg.properties.quantity: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["price_data", "quantity", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        price_data: 'CheckoutsessionsCreateSessionRequestLineItemsItemPriceData',
        quantity: typing.Union[MetaOapg.properties.quantity, decimal.Decimal, int, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CheckoutsessionsCreateSessionRequestLineItemsItem':
        return super().__new__(
            cls,
            *args,
            price_data=price_data,
            quantity=quantity,
            _configuration=_configuration,
            **kwargs,
        )

from dots_python_sdk.model.checkoutsessions_create_session_request_line_items_item_price_data import CheckoutsessionsCreateSessionRequestLineItemsItemPriceData
