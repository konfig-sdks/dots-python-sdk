# coding: utf-8

"""
    dots api

    Scalable and Flexible Payouts Infrastructure

    The version of the OpenAPI document: 1.0
    Contact: info@dots.dev
    Created by: https://dots.dev
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dots_python_sdk import schemas  # noqa: F401


class CheckoutsessionsCreateSessionRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        required = {
            "mode",
            "line_items",
            "success_url",
        }
        
        class properties:
        
            @staticmethod
            def line_items() -> typing.Type['CheckoutsessionsCreateSessionRequestLineItems']:
                return CheckoutsessionsCreateSessionRequestLineItems
            success_url = schemas.StrSchema
            
            
            class mode(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def PAYMENT(cls):
                    return cls("payment")
            customer_email = schemas.StrSchema
            client_reference_id = schemas.StrSchema
            cancel_url = schemas.StrSchema
            user_id = schemas.UUIDSchema
            customer_id = schemas.UUIDSchema
            
            
            class expires_in(
                schemas.IntSchema
            ):
                pass
            metadata = schemas.DictSchema
            __annotations__ = {
                "line_items": line_items,
                "success_url": success_url,
                "mode": mode,
                "customer_email": customer_email,
                "client_reference_id": client_reference_id,
                "cancel_url": cancel_url,
                "user_id": user_id,
                "customer_id": customer_id,
                "expires_in": expires_in,
                "metadata": metadata,
            }
    
    mode: MetaOapg.properties.mode
    line_items: 'CheckoutsessionsCreateSessionRequestLineItems'
    success_url: MetaOapg.properties.success_url
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["line_items"]) -> 'CheckoutsessionsCreateSessionRequestLineItems': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["success_url"]) -> MetaOapg.properties.success_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> MetaOapg.properties.mode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customer_email"]) -> MetaOapg.properties.customer_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_reference_id"]) -> MetaOapg.properties.client_reference_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cancel_url"]) -> MetaOapg.properties.cancel_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_id"]) -> MetaOapg.properties.user_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customer_id"]) -> MetaOapg.properties.customer_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expires_in"]) -> MetaOapg.properties.expires_in: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["metadata"]) -> MetaOapg.properties.metadata: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["line_items", "success_url", "mode", "customer_email", "client_reference_id", "cancel_url", "user_id", "customer_id", "expires_in", "metadata", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["line_items"]) -> 'CheckoutsessionsCreateSessionRequestLineItems': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["success_url"]) -> MetaOapg.properties.success_url: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> MetaOapg.properties.mode: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customer_email"]) -> typing.Union[MetaOapg.properties.customer_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_reference_id"]) -> typing.Union[MetaOapg.properties.client_reference_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cancel_url"]) -> typing.Union[MetaOapg.properties.cancel_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_id"]) -> typing.Union[MetaOapg.properties.user_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customer_id"]) -> typing.Union[MetaOapg.properties.customer_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expires_in"]) -> typing.Union[MetaOapg.properties.expires_in, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["metadata"]) -> typing.Union[MetaOapg.properties.metadata, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["line_items", "success_url", "mode", "customer_email", "client_reference_id", "cancel_url", "user_id", "customer_id", "expires_in", "metadata", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        mode: typing.Union[MetaOapg.properties.mode, str, ],
        line_items: 'CheckoutsessionsCreateSessionRequestLineItems',
        success_url: typing.Union[MetaOapg.properties.success_url, str, ],
        customer_email: typing.Union[MetaOapg.properties.customer_email, str, schemas.Unset] = schemas.unset,
        client_reference_id: typing.Union[MetaOapg.properties.client_reference_id, str, schemas.Unset] = schemas.unset,
        cancel_url: typing.Union[MetaOapg.properties.cancel_url, str, schemas.Unset] = schemas.unset,
        user_id: typing.Union[MetaOapg.properties.user_id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        customer_id: typing.Union[MetaOapg.properties.customer_id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        expires_in: typing.Union[MetaOapg.properties.expires_in, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        metadata: typing.Union[MetaOapg.properties.metadata, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CheckoutsessionsCreateSessionRequest':
        return super().__new__(
            cls,
            *args,
            mode=mode,
            line_items=line_items,
            success_url=success_url,
            customer_email=customer_email,
            client_reference_id=client_reference_id,
            cancel_url=cancel_url,
            user_id=user_id,
            customer_id=customer_id,
            expires_in=expires_in,
            metadata=metadata,
            _configuration=_configuration,
            **kwargs,
        )

from dots_python_sdk.model.checkoutsessions_create_session_request_line_items import CheckoutsessionsCreateSessionRequestLineItems
