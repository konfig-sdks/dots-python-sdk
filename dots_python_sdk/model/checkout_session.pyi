# coding: utf-8

"""
    dots api

    Scalable and Flexible Payouts Infrastructure

    The version of the OpenAPI document: 1.0
    Contact: info@dots.dev
    Created by: https://dots.dev
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dots_python_sdk import schemas  # noqa: F401


class CheckoutSession(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.UUIDSchema
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
                
                @schemas.classproperty
                def OPEN(cls):
                    return cls("open")
                
                @schemas.classproperty
                def COMPLETE(cls):
                    return cls("complete")
                
                @schemas.classproperty
                def EXPIRED(cls):
                    return cls("expired")
            payment_intent_id = schemas.UUIDSchema
            success_url = schemas.StrSchema
            cancel_url = schemas.StrSchema
            checkout_session_url = schemas.StrSchema
            client_reference_id = schemas.StrSchema
            expiry = schemas.DateTimeSchema
            metadata = schemas.DictSchema
        
            @staticmethod
            def line_items() -> typing.Type['CheckoutSessionLineItems']:
                return CheckoutSessionLineItems
            created = schemas.DateTimeSchema
            updated = schemas.DateTimeSchema
            customer_id = schemas.UUIDSchema
            customer_email = schemas.StrSchema
            amount_total = schemas.IntSchema
            __annotations__ = {
                "id": id,
                "status": status,
                "payment_intent_id": payment_intent_id,
                "success_url": success_url,
                "cancel_url": cancel_url,
                "checkout_session_url": checkout_session_url,
                "client_reference_id": client_reference_id,
                "expiry": expiry,
                "metadata": metadata,
                "line_items": line_items,
                "created": created,
                "updated": updated,
                "customer_id": customer_id,
                "customer_email": customer_email,
                "amount_total": amount_total,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payment_intent_id"]) -> MetaOapg.properties.payment_intent_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["success_url"]) -> MetaOapg.properties.success_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cancel_url"]) -> MetaOapg.properties.cancel_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["checkout_session_url"]) -> MetaOapg.properties.checkout_session_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["client_reference_id"]) -> MetaOapg.properties.client_reference_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expiry"]) -> MetaOapg.properties.expiry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["metadata"]) -> MetaOapg.properties.metadata: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["line_items"]) -> 'CheckoutSessionLineItems': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated"]) -> MetaOapg.properties.updated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customer_id"]) -> MetaOapg.properties.customer_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customer_email"]) -> MetaOapg.properties.customer_email: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount_total"]) -> MetaOapg.properties.amount_total: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "status", "payment_intent_id", "success_url", "cancel_url", "checkout_session_url", "client_reference_id", "expiry", "metadata", "line_items", "created", "updated", "customer_id", "customer_email", "amount_total", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payment_intent_id"]) -> typing.Union[MetaOapg.properties.payment_intent_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["success_url"]) -> typing.Union[MetaOapg.properties.success_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cancel_url"]) -> typing.Union[MetaOapg.properties.cancel_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["checkout_session_url"]) -> typing.Union[MetaOapg.properties.checkout_session_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["client_reference_id"]) -> typing.Union[MetaOapg.properties.client_reference_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expiry"]) -> typing.Union[MetaOapg.properties.expiry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["metadata"]) -> typing.Union[MetaOapg.properties.metadata, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["line_items"]) -> typing.Union['CheckoutSessionLineItems', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated"]) -> typing.Union[MetaOapg.properties.updated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customer_id"]) -> typing.Union[MetaOapg.properties.customer_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customer_email"]) -> typing.Union[MetaOapg.properties.customer_email, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount_total"]) -> typing.Union[MetaOapg.properties.amount_total, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "status", "payment_intent_id", "success_url", "cancel_url", "checkout_session_url", "client_reference_id", "expiry", "metadata", "line_items", "created", "updated", "customer_id", "customer_email", "amount_total", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        payment_intent_id: typing.Union[MetaOapg.properties.payment_intent_id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        success_url: typing.Union[MetaOapg.properties.success_url, str, schemas.Unset] = schemas.unset,
        cancel_url: typing.Union[MetaOapg.properties.cancel_url, str, schemas.Unset] = schemas.unset,
        checkout_session_url: typing.Union[MetaOapg.properties.checkout_session_url, str, schemas.Unset] = schemas.unset,
        client_reference_id: typing.Union[MetaOapg.properties.client_reference_id, str, schemas.Unset] = schemas.unset,
        expiry: typing.Union[MetaOapg.properties.expiry, str, datetime, schemas.Unset] = schemas.unset,
        metadata: typing.Union[MetaOapg.properties.metadata, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        line_items: typing.Union['CheckoutSessionLineItems', schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, str, datetime, schemas.Unset] = schemas.unset,
        updated: typing.Union[MetaOapg.properties.updated, str, datetime, schemas.Unset] = schemas.unset,
        customer_id: typing.Union[MetaOapg.properties.customer_id, str, uuid.UUID, schemas.Unset] = schemas.unset,
        customer_email: typing.Union[MetaOapg.properties.customer_email, str, schemas.Unset] = schemas.unset,
        amount_total: typing.Union[MetaOapg.properties.amount_total, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CheckoutSession':
        return super().__new__(
            cls,
            *args,
            id=id,
            status=status,
            payment_intent_id=payment_intent_id,
            success_url=success_url,
            cancel_url=cancel_url,
            checkout_session_url=checkout_session_url,
            client_reference_id=client_reference_id,
            expiry=expiry,
            metadata=metadata,
            line_items=line_items,
            created=created,
            updated=updated,
            customer_id=customer_id,
            customer_email=customer_email,
            amount_total=amount_total,
            _configuration=_configuration,
            **kwargs,
        )

from dots_python_sdk.model.checkout_session_line_items import CheckoutSessionLineItems
